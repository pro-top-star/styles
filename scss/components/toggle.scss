@import "./../settings";
@import "./../mixins";
@import "./../functions";
/*!
.fd-toggle+(--no-border)
    .fd-toggle__content+()
    .fd-toggle__title+()
*/
$block: #{$fd-namespace}-toggle;
.#{$block} {
  // Hard coded values, TODO: look into cleaning up with more local spacing variables ~Eric

  //SETTINGS
  //SIZES â€” size: height "text size" "icon size"
  $fd-toggle-sizes: (
      "default": fd-space(12) fd-space(7), //48px 28px
      "xs": fd-space(9) fd-space(5), //36px 20px
      "s": fd-space(10) fd-space(6), //40px 24px
      "l": fd-space(14) fd-space(8), //56px 32px
  ) !default;
  $_defaults: map-get($fd-toggle-sizes, "default");
  $fd-toggle-width: nth($_defaults, 1);
  $fd-toggle-height: nth($_defaults, 2);
  $fd-toggle-background-color: $fd-forms-border-color !default;
  $fd-toggle-transition-params: $fd-animation--speed ease-in !default;
  $fd-toggle-switch-width: nth($_defaults, 2);
  $fd-toggle-switch-background-color: fd-color(neutral, 1) !default;
  $fd-toggle-switch-background-color--disabled: fd-color(neutral, 2) !default;
  $fd-toggle-switch-box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.15);

  @include fd-reset;
  position: relative;
  display: inline-block;
  height: $fd-toggle-height;
  width: $fd-toggle-width;
  vertical-align: middle;
  &__switch {
    height: $fd-toggle-switch-width;
    width: $fd-toggle-switch-width;
    border-radius: 50%;
    position: absolute;
    z-index: 2;
    top: 0;
    left: 0;
    right: 100%;
    background-color: $fd-toggle-switch-background-color;
    border: 1px solid rgba(fd-color(text, 3), .7);
    transition: left $fd-toggle-transition-params;
    pointer-events: none;
    box-shadow: $fd-toggle-switch-box-shadow;
  }
  input {
    position: absolute;
    width: 100%;
    height: 71%;
    top: calc((100% - 71%) /2);
    z-index: 1;
    border-color: transparent !important;
    border-radius: $fd-toggle-height/2;
    background-color: $fd-toggle-background-color;
    &::before,
    &::after {
      display: none;
    }
    &:checked {
      background-color: $fd-link-color;
      opacity: 0.6;
      & + .#{$block}__switch {
        left: calc(100% - #{$fd-toggle-switch-width});
        background: $fd-link-color--pressed;
        border-color: $fd-link-color--pressed;
      }
    }

    &:hover {
      border-color: transparent;
    }
    &:active,
    &:focus {
      border-color: transparent;
    }
    &[disabled],
    &.is-disabled,
    &[aria-disabled="true"] {
      opacity: 0.4;
      border-color: transparent;
      & + .#{$block}__switch {
        border-color: transparent;
        background-color: $fd-toggle-switch-background-color--disabled;
      }
    }

  }


  //SIZES
  @each $key, $list in $fd-toggle-sizes {
    @if $key != "default" {
      &--#{$key} {
        height: nth($list, 2);
        width: nth($list, 1);
        .#{$block}__switch {
          height: nth($list, 2);
          width: nth($list, 2);
        }
        input {
          border-radius: nth($list, 2)/2;
          &:checked {
            & + .#{$block}__switch {
              left: calc(100% - #{nth($list, 2)});
            }
          }
        }
      }
    }
  }






}
