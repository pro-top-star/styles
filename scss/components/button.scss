@import "./../settings";
@import "./../mixins";
@import "./../functions";
@import "./../icons/mixins";

/*!
.fd-button+( (--small | --large), --icon, --text, --link, --action-bar)+( (.is-disabled | [aria-disabled=true]) | (.is-selected | [aria-selected=true] | (.is-pressed | [aria-pressed=true]))
*/

$block: #{$fd-namespace}-button;
.#{$block} {

  //SIZES — size: height "text size" "icon size"
  $fd-button-sizes: (
    "default": --fd-forms-height "0" "l", //36px
    "compact": --fd-forms-height-compact "0" "m", //28px
  ) !default;

  //spacing
  $fd-button-padding-x: fd-space("xs") !default;
  //anim
  $fd-button-transition-params: $fd-animation--speed ease-in !default;

  //BASE
  //set all reset and baseline block styles
  $defaults: map-get($fd-button-sizes, "default");
  @at-root {
    .#{$block}, [class*="#{$block}--"] {
      --fd-button-color: var(--fd-color-action-1);
      --fd-button-border-color: var(--fd-color-action-1);
      --fd-button-background-color: var(--fd-color-background-2);

      @include fd-button-reset;
      //set metrics
      height: var(nth($defaults, 1));
      max-height: var(nth($defaults, 1));
      @include fd-type(nth($defaults, 2));
      @include fd-icon-size(nth($defaults, 3));
      line-height: 1;
      padding-left: $fd-button-padding-x;
      padding-right: $fd-button-padding-x;
      min-width: var(nth($defaults, 1));

      //look
      border-style: solid;
      border-width: 1px;
      border-color: var(--fd-button-border-color);
      background-color: var(--fd-button-background-color);
      color: var(--fd-button-color);

      //animation
      transition: all $fd-button-transition-params;

      //placements
      &::before {
        margin-right: fd-space(2);
        vertical-align: middle;
      }
      &::after {
        margin-left: fd-space(2);
        vertical-align: middle;
      }
      &:empty {
        padding: 0;
        &::before {
          margin-right: 0;
        }
        &::after {
          margin-left: 0;
        }
      }

      //states
      @include fd-focus;
      @include fd-hover {
          --fd-button-background-color: var(--fd-color-action-hover);
          --fd-button-color: var(--fd-color-action-2);
          @include fd-disabled {
            --fd-button-background-color: var(--fd-color-background-2);
            --fd-button-color: var(--fd-color-action-1);
          }
      }
      @include fd-selected {
        //&:not(.is-disabled):not([disabled]):not([aria-disabled="true"]) {
          --fd-button-background-color: var(--fd-color-action-selected);
          --fd-button-color: var(--fd-color-action-2);
        //}
      }
      @include fd-disabled {
        opacity: 0.4;
        cursor: not-allowed;
      }


    }
  }
  //compact sizes (see `core/root` for css vars rules)
  @each $key, $list in $fd-button-sizes {
    @if $key != "default" {
      &--#{$key} {
        //set metrics
        height: var(nth($list, 1));
        max-height: var(nth($list, 1));
        min-width: var(nth($list, 1));
        @include fd-type(nth($list, 2));
        @include fd-icon-size(nth($list, 3), "before");
        @include fd-icon-size(nth($list, 3), "after");
        line-height: 1;
      }
    }
  }
  //BUTTON variations
  &--main,
  &--action-bar {
    --fd-button-color: var(--fd-color-action-2);
    --fd-button-border-color: var(--fd-color-action-1);
    --fd-button-background-color: var(--fd-color-action-1);
    @include fd-hover {
      --fd-button-background-color: var(--fd-color-action-hover);
      --fd-button-color: var(--fd-color-action-2);
      @include fd-disabled {
        --fd-button-background-color: var(--fd-color-action-1);
        --fd-button-color: var(--fd-color-action-2);
      }
    }
    &.#{$block}--negative {
      --fd-button-color: var(--fd-color-action-2);
      --fd-button-border-color: var(--fd-color-status-3);
      --fd-button-background-color: var(--fd-color-status-3);
      @include fd-hover {
        @include fd-disabled {
          --fd-button-background-color: var(--fd-color-status-3);
          --fd-button-color: var(--fd-color-action-2);
        }
      }
    }
    &.#{$block}--positive {
      --fd-button-color: var(--fd-color-action-2);
      --fd-button-border-color: var(--fd-color-status-1);
      --fd-button-background-color: var(--fd-color-status-1);
      @include fd-hover {
        @include fd-disabled {
          --fd-button-background-color: var(--fd-color-status-1);
          --fd-button-color: var(--fd-color-action-2);
        }
      }
    }
  }


  &--secondary {
    --fd-button-border-color: transparent;
    @include fd-hover {
      --fd-button-background-color: var(--fd-color-neutral-1);
      --fd-button-color: var(--fd-color-action-1);
      @include fd-disabled {
        --fd-button-background-color: var(--fd-color-background-2);
        --fd-button-color: var(--fd-color-action-1);
      }
    }
    @include fd-selected {
      --fd-button-background-color: var(--fd-color-action-selected);
      --fd-button-color: var(--fd-color-action-2);
    }

    &.#{$block}--negative {
      --fd-button-color: var(--fd-color-status-3);
      --fd-button-border-color: transparent;
      --fd-button-background-color: transparent;
      @include fd-hover {
        --fd-button-background-color: var(--fd-color-neutral-1);
        --fd-button-color: var(--fd-color-status-3);
        @include fd-disabled {
          --fd-button-background-color: transparent;
          --fd-button-color: var(--fd-color-status-3);
        }
      }
      @include fd-selected {
        --fd-button-background-color: var(--fd-color-status-3);
        --fd-button-color: var(--fd-color-action-2);
      }

    }
    &.#{$block}--positive {
      --fd-button-color: var(--fd-color-status-1);
      --fd-button-border-color: transparent;
      --fd-button-background-color: transparent;
      @include fd-hover {
        --fd-button-background-color: var(--fd-color-neutral-1);
        --fd-button-color: var(--fd-color-status-1);
        @include fd-disabled {
          --fd-button-background-color: transparent;
          --fd-button-color: var(--fd-color-status-1);
        }
      }
      @include fd-selected {
        --fd-button-background-color: var(--fd-color-status-1);
        --fd-button-color: var(--fd-color-action-2);
      }
    }
  }


  //BUTTON TYPES
  &--toolbar {
    --fd-button-color: var(--fd-color-text-2);
    --fd-button-border-color: var(--fd-color-neutral-3);
    --fd-button-background-color: var(--fd-color-neutral-1);
    @include fd-focus(--fd-color-neutral-3);
    @include fd-selected {
      --fd-button-background-color: var(--fd-color-action-selected);
      --fd-button-color: var(--fd-color-action-2);
    }
    @include fd-hover {
      --fd-button-background-color: var(--fd-color-action-hover);
      --fd-button-color: var(--fd-color-action-2);
      @include fd-disabled {
        --fd-button-background-color: var(--fd-color-neutral-3);
        --fd-button-color: var(--fd-color-text-2);
      }
    }
  }
  &--positive {
    --fd-button-color: var(--fd-color-status-1);
    --fd-button-border-color: var(--fd-color-status-1);
    --fd-button-background-color: var(--fd-color-background-2);
    @include fd-focus(--fd-color-status-1);
    @include fd-hover {
      --fd-button-background-color: var(--fd-color-status-1);
      --fd-button-color: var(--fd-color-action-2);
      @include fd-disabled {
        --fd-button-color: var(--fd-color-status-1);
      }
    }
    @include fd-selected {
      --fd-button-background-color: var(--fd-color-status-1);
      --fd-button-color: var(--fd-color-action-2);
    }
  }
  &--negative {
    --fd-button-color: var(--fd-color-status-3);
    --fd-button-border-color: var(--fd-color-status-3);
    --fd-button-background-color: var(--fd-color-background-2);
    @include fd-focus(--fd-color-status-3);
    @include fd-hover {
      --fd-button-background-color: var(--fd-color-status-3);
      --fd-button-color: var(--fd-color-action-2);
      @include fd-disabled {
        --fd-button-color: var(--fd-color-status-3);
      }
    }
    @include fd-selected {
        --fd-button-background-color: var(--fd-color-status-3);
        --fd-button-color: var(--fd-color-action-2);
    }
  }
}


//CONTEXTS
.#{$block}-group [class*="#{$block}--"],
.#{$block}-group .#{$block} {
  @extend .#{$block}--toolbar;
}






//DEPRECATED
.#{$block} {
  //SETTINGS
  //SIZES — size: height "text size" "icon size"
  $fd-button-sizes-deprecated: (
      "default": $fd-forms-height "0" "l", //36px
      //"compact": fd-space(8) "0" "m", //32px
      "xs": fd-space(6) "-2" "s", //24px
      "s": fd-space(7) "0" "m", //28px
      "l": fd-space(10) "0" "l", //40px
  ) !default;
  $fd-button-padding-x-deprecated: fd-space(3)/1.2 !default;

    @each $key, $list in $fd-button-sizes-deprecated {
      @if $key != "default" {
        &--#{$key} {
          @include fd-type(nth($list, 2));
          @include fd-icon-size(nth($list, 3), "before");
          @include fd-icon-size(nth($list, 3), "after");
          height: nth($list,1);
          max-height: nth($list, 1);
          min-width: nth($list, 1);
          line-height: 1;
          @if $key == "compact" {
            &::before {
              margin-right: fd-space(2) / 1.333;
            }
            &::after {
              margin-left: fd-space(2) / 1.333;
            }
          }
          @if $key == "xs" {
            padding-left: $fd-button-padding-x-deprecated / 1.25;
            padding-right: $fd-button-padding-x-deprecated / 1.25;
            &::before,
            &::after {
              vertical-align: baseline;
            }
          }
          @if $key == "l" {
            padding-left: $fd-button-padding-x-deprecated * 1.2;
            padding-right: $fd-button-padding-x-deprecated * 1.2;
          }
          @if $key == "xs" or $key == "s"  {
            &::before {
              margin-right: fd-space(2) / 1.333;
            }
            &::after {
              margin-left: fd-space(2) / 1.333;
            }
          }
        }
      }
    }


}
