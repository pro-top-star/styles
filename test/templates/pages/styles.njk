{% extends "./layouts/master.njk" %}
{% block content %}


{% set breakpoints = {
  "xs": 320,
  "s": 800,
  "m": 1024,
  "l": 1440,
  "xl": 1580
} %}
<style>
{% for size,width in breakpoints %}
@media screen and (min-width: {{width}}px) {
  .fd-ui__header::before {
    content: "{{size}}: {{width}}px";
    font-size: 2em;
    background-color: white;
  }
}
{% endfor %}

.fd-container{ flex:1; margin:40px;}
</style>

{% set colors = {
  "action": [ "hsl(210, 91%, 43%) / #0A6ED1", "hsl(210, 0%, 100%) / #FFFFFF" ],
  "shell": [ "hsl(210, 28.4%, 29%) / #354A5F","hsl(210, 100%, 91%) / #D1E8FF"],
  "text": [ "hsl(210, 7.5%, 21%) / #32363a",  "hsl(210, 5%, 33.5%) / #515559", "hsl(210, 3%, 44.7%) / #66696c", "hsl(210, 0%, 100%) / #ffffff"],
  "background": [ "hsl(210, 9%, 93.5%) / #EDEFF0",  "hsl(210, 0%, 100%) / #FFFFFF"],
  "neutral": [ "hsl(210, 3%, 98%) / #fafafa",  "hsl(210, 3%, 93.5%) / #eeeeef", "hsl(210, 1%, 87%) / #dededf"],
  "status": [ "#359c46",  "#f59518", "#ee0000", "#6D7678"],
  "accent": [
    "hsl(34, 82%, 49%)/ #e38b16" ,
    "hsl(0, 80%, 67%) / #EE6868",
    "hsl(342, 82%, 61%) / #ED4A7B",
    "hsl(315, 54%, 49%) / #C0399F",
    "hsl(238, 65%, 64%) / #686CDF",
    "hsl(210, 64%, 60%) / #5899DA",
    "hsl(186, 81%, 39%) / #13A4B4",
    "hsl(75, 86%, 34%) / #7CA10C",
    "hsl(269, 54%, 59%) / #955ECF",
    "hsl(197, 15%, 50%) / #6C8893"
    ]
} %}

{% set states = {
  "action": [
    ["hover", "hsla(210, 91%, 36%, 1) / #085caf"],
    ["selected", "hsla(210deg, 98%, 33%, 1) / #0254a7"],
    ["disabled", "hsla(210deg, 91%, 43%, 0.4) / n/a"]
  ],
  "background": [
    ["hover", "hsla(210deg, 3%, 98%, 1) / #fafafa"],
    ["selected", "hsla(210deg, 91%, 43%, 0.07) / n/a"],
    ["selected-hover", "hsla(210deg, 91%, 43%, 0.1) / n/a"],
    ["positive", "hsla(144.86486deg, 77.62238%, 94.03922%, 1) / #e4fcee"],
    ["alert", "hsla(0deg, 100%, 95.66667%, 1) / #ffe9e9"],
    ["negative", "hsla(0deg, 100%, 95.66667%, 1) / #ffe9e9"]
  ]
} %}

<div class="fd-container">

    <h1>Color</h1>
{% for group, values in colors %}
  <h2>{{ group }}</h2>
  {% for item in values %}
    <span>{{ loop.index }} - {{ item }}</span>

<br>    <div style="padding: 20px; border: 1px solid #ccc; background-color: var(--fd-color-{{ group }}-{{ loop.index }})">
    </div>
<br>
  {% endfor %}

{% endfor %}


{% for group, values in states %}
  <h1>State Colors</h1>
  <h2>{{ group }}</h2>
  {% for item in values %}
    <span>{{ item[0] }} — {{ item[1] }}</span>
    {% set cssvar %}
    --fd-color-{{ group }}-{{ item[0] }}
    {% endset %}

    <br> <div style="padding: 20px; border: 1px solid #ccc; background-color: var({{cssvar}})">
        </div>
    <br>
  {% endfor %}

{% endfor %}


{#
<h2>Mixins</h2>
<h3><code>@mixin fd-color($group, $shade)</code></h3>
 #}

</div>

{% set spaces = {
  "base": 4,
  "xs": 8,
  "s": 12,
  "reg": 20,
  "m": 32,
  "l": 40,
  "xl": 60
} %}


<div class="fd-container">

    <h1>Spacing</h1>
{% for key, value in spaces %}
    <h2 style="margin-bottom:0;">{{ key }}</h2>
    <div class="fd-has-height-{{ key }}" style="background-color: pink;">
    </div>
    <br>
    {# <p>{{ value }}px</p> #}
{% endfor %}
{#
<h2>Mixins</h2>
<h3><code>@mixin fd-space($size)</code></h3>
 #}

</div>





{% set specs = {
    "-3": [ 11, 16, "body", "bold", "none" ],
    "-2": [ 12, 16, "body", "reg", "none" ],
    "-1": [ 13, 16, "body", "reg", "none" ],
    "0": [ 14, 20, "body", "reg", "none" ],
    "1": [ 16, 20, "body", "reg", "none" ],
    "2": [ 19, 24, "body", "reg", "none" ],
    "3": [ 23, 32, "body", "reg", "none" ],
    "4": [ 30, 36, "body", "reg", "none" ],
    "5": [ 45, 52, "header", "reg", "none" ]
} %}


<div class="fd-container">

    <h1>Type Sizes</h1>

    {% for i in ["-3","-2","-1","0","1","2","3","4","5"] | reverse %}
    {% set type = specs[i] %}
        <h2 style="margin-bottom:0;">{{i}}</h2>
           {# — {{ "72Condensed" if type[2] == "header" else "72" }} {{ type[3] | capitalize }}{{ "bold" if type[2] == "medium" }} {{ type[0] }}px | Line-height {{ type[1] }}px #}
         </p>
        <p class="fd-has-type{{ '-minus' if i < 0 }}-{{ i | abs if i != 0 else 'base' }}">
          {% if i == "5" %}
            {# <s> #}
          {% endif %}Grumpy wizards make toxic brew for the evil Queen and Jack wizards make toxic brew for the evil Queen and Jack
          {% if i == "5" %}
        {# </s> #}
          {% endif %}
        </p>
        <br><br>

    {% endfor %}

<p>
  <strong>body</strong>
   {# — 72 Reg 14px | Line height 20px #}
</p>
        <p>
    Nullam ut tincidunt nunc. Pellentesque metus lacus commodo eget justo ut rutrum varius nunc. Sed non rhoncus risus. Morbi sodales gravida pulvinar. Duis malesuada odio volutpat elementum vulputate massa magna scelerisque ante et accumsan tellus nunc in sem. Donec mattis arcu et velit aliquet non sagittis justo vestibulum. Suspendisse volutpat felis lectus nec consequat ipsum mattis id.
    </p><p>
    Donec dapibus vehicula facilisis. In tincidunt mi nisi nec faucibus tortor euismod nec. Suspendisse ante ligula aliquet vitae libero eu vulputate dapibus libero. Sed bibendum sapien at posuere interdum libero est sollicitudin magna ac gravida tellus purus eu ipsum. Proin ut quam arcu.

        </p>


{#
    <h2>Mixins</h2>
    <h3><code>@mixin fd-type($size, $weight, $transform)</code></h3>
    <p>Each type size has default family, weight and transform rules built in. Passing the size alone will return all default rules.</p>
    <p>Example:<br>
    <pre>
    .foo {
        @include fd-type("4");
    }
    </pre>
    </p>
    <p>
    Additional arguments can be passed to the mixin.
    </p>
    <p>Example:<br>
    <pre>
    .small-header {
        @include fd-type("-3",reg,none);
    }
    </pre>
    <table>
        <tr>
            <td colspan="2">
                Acceptable arguments
            </td>
        </tr>
        <tr>
            <td>$size</td>
            <td>-3,-2,-1,0 (default),1,2,3,4,5</td>
        </tr>
        <tr>
            <td>$weight</td>
            <td>reg (default), med, semi</td>
        </tr>
        <tr>
            <td>$transform</td>
            <td>none (default), uppercase, lowercase</td>
        </tr>
    </table>



    <h3><code>@mixin fd-weight($weight)</code></h3>
    <p>
    Mofify the font-weight independently.
    </p>
    <table>
        <tr>
            <td colspan="2">
                Acceptable arguments
            </td>
        </tr>
        <tr>
            <td>$weight</td>
            <td>light, reg (default), med, semi, bold</td>
        </tr>
    </table>


    <h2>Helpers</h2>
    <p>These classes are also available to apply all default rules. Use sparingly.</p>


    <h3>Sizes</h3>

    {% for i in [-3,-2,-1,0,1,2,3,4,5] | reverse %}
    <p>
          <code>.fd-has-type{{ '-minus' if i < 0 }}-{{ i | abs }}{% if i == 0 %}, .fd-has-type-base{% endif %}</code>
        <br>
    </p>
    {% endfor %} #}



</div>

<div class="fd-container">
  <h1>Fonts</h1>
  {% for i in ['header', 'body', 'code'] %}
      <span>
           <code>.fd-has-font-family-{{ i }}</code>
      </span>
      <p class="fd-has-type-3 fd-has-font-family-{{ i }}">Grumpy wizards make toxic brew for the evil Queen and Jack</p>
      <br>
  {% endfor %}
</div>

{% endblock %}
